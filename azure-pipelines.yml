# ASP.NET Core (.NET Framework)

# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
  
#- job: 'IntegrationTests'
 # pool:
  #  name: IntegrationTestPool  # name of the pool to run this job in

  #steps:
  #- task: DotNetCoreCLI@2
   # inputs:
    #  command: 'build'
     # projects: '$(solution)'
     # configuration: '$(buildConfiguration)'

  #- task: Bash@3
   # inputs:
    #  targetType: 'inline'
     # script: 'az login --identity'
     # noProfile: false
     # noRc: false

#  - task: DotNetCoreCLI@2
 #   inputs:
  #    command: 'test'
   #   projects: '**/Diagnostics.Tests.Integration.*.csproj'
    #  arguments: '--configuration $(buildConfiguration)'
    
    
- job: 'UnitTestAndPublish'
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk step'
    inputs:
      packageType: sdk
      version: 2.2.x
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: NuGetAuthenticate@0
    inputs:
      nuGetServiceConnections: 'AzureGenevaMonitoring'

  - task: DotNetCoreCLI@2
    displayName: 'Restore Packages'
    inputs:
      command: 'restore'
      projects: '**/Diagnostics.Tests.csproj'
      feedsToUse: 'select'
      vstsFeed: 'b2430cf7-78c0-440a-aa4a-a25665c5778e'

  - task: DotNetCoreCLI@2
    displayName: 'Run Tests'
    inputs:
      command: 'test'
      projects: '**/Diagnostics.Tests.csproj'
      arguments: '--configuration $(buildConfiguration)'
      feedsToUse: select
      vstsFeed: 'AzureGenevaMonitoring'
      externalFeedCredentials: 'AzureGenevaMonitoring'

  - task: DotNetCoreCLI@2
    displayName: "Publish"
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: True

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: backend-drop1
